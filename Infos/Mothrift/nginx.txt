
server {
    server_name mothrift.com;

    location / {
        root        /home/ubuntu/projects/mothrift.com/;
        index       index.html;
        try_files   $uri $uri/ /index.html;
    }

    location /socket.io/ {
        proxy_http_version 1.1;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_pass "http://localhost:3019/socket.io/";
    }

    location /api {
        proxy_pass "http://localhost:3019";
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;

        # listen 443 ssl; # managed by Certbot
        # ssl_certificate /etc/letsencrypt/live/mothrift.com/fullchain.pem; # managed by Certbot
        # ssl_certificate_key /etc/letsencrypt/live/mothrift.com/privkey.pem; # managed by Certbot
        # include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    }
}

server {
    if ($host = mothrift.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    server_name mothrift.com;
    listen 80;
    return 404; # managed by Certbot
}

server {
    server_name backend.mothrift.com;

    location / {
        root        /home/ubuntu/projects/backend.mothrift.com/;
        index       index.html;
        try_files   $uri $uri/ /index.html;
    }

    location /socket.io/ {
        proxy_http_version 1.1;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_pass "http://localhost:3019/socket.io/";
    }

    location /api {
        proxy_pass "http://localhost:3019";
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;

        # listen 443 ssl; # managed by Certbot
        # ssl_certificate /etc/letsencrypt/live/backend.mothrift.com/fullchain.pem; # managed by Certbot
        # ssl_certificate_key /etc/letsencrypt/live/backend.mothrift.com/privkey.pem; # managed by Certbot
        # include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    }
}

server {
    if ($host = backend.mothrift.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    server_name backend.mothrift.com;
    listen 80;
    return 404; # managed by Certbot
}
